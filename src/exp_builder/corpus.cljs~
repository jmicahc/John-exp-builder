(ns exp-builder.corpus
  (:require-macros [cljs.core.async.macros :refer [go-loop go]])
  (:require [cljs.core.async :as async :refer
             [<! >! chan pub sub dropping-buffer put! take!]]))

(def input-chan (chan))
(def global-pub (pub input-chan :uuid))
(def output-chan (chan))

(defn update-selection []
  (if ))


(go-loop []
  (let [x (<! input-chan)]
    ()
    (recur)))



